---
kind: pipeline
name: test

platform:
  os: linux
  arch: amd64

steps:
- name: staticcheck
  image: golang:1.15
  commands:
  - go run honnef.co/go/tools/cmd/staticcheck ./...
  volumes:
  - name: gopath
    path: /go

- name: lint
  image: golang:1.15
  commands:
  - go run golang.org/x/lint/golint -set_exit_status ./...
  volumes:
  - name: gopath
    path: /go

- name: vet
  image: golang:1.15
  commands:
  - go vet ./...
  volumes:
  - name: gopath
    path: /go

- name: test
  image: golang:1.15
  commands:
  - go test -cover ./...
  volumes:
  - name: gopath
    path: /go

volumes:
- name: gopath
  temp: {}

image_pull_secrets:
- docker_config

trigger:
  ref:
  - refs/heads/main
  - refs/tags/**
  - refs/pull/**

---
kind: pipeline
name: build-binaries

platform:
  os: linux
  arch: amd64

steps:
- name: build
  image: techknowlogick/xgo:go-1.15.x
  commands:
  - "[ -z \"${DRONE_TAG}\" ] && BUILD_VERSION=${DRONE_COMMIT_SHA:0:8} || BUILD_VERSION=${DRONE_TAG##v}"
  - mkdir -p release/
  - cd cmd/drone-docker-buildx && xgo -ldflags "-s -w -X main.version=$BUILD_VERSION" -tags netgo -targets 'linux/amd64,linux/arm-6,linux/arm-7,linux/arm64' -out drone-docker-buildx .
  - mv /build/* /drone/src/release/
  - ls -l /drone/src/release/

- name: executable
  image: alpine
  commands:
  - $(find release/ -executable -type f | grep drone-docker-buildx-linux-amd64) --help

- name: compress
  image: alpine
  commands:
  - apk add upx
  - find release/ -maxdepth 1 -executable -type f -exec upx {} \;
  - ls -lh release/

- name: checksum
  image: alpine
  commands:
  - cd release/ && sha256sum * > sha256sum.txt

- name: changelog-generate
  image: thegeeklab/git-chglog
  commands:
  - git fetch -tq
  - git-chglog --no-color --no-emoji -o CHANGELOG.md ${DRONE_TAG:---next-tag unreleased unreleased}

- name: changelog-format
  image: thegeeklab/alpine-tools
  commands:
  - prettier CHANGELOG.md
  - prettier -w CHANGELOG.md

- name: publish
  image: plugins/github-release
  settings:
    api_key:
      from_secret: github_token
    files:
    - release/*
    note: CHANGELOG.md
    overwrite: true
    title: ${DRONE_TAG}
  when:
    ref:
    - refs/tags/**

image_pull_secrets:
- docker_config

trigger:
  ref:
  - refs/heads/main
  - refs/tags/**
  - refs/pull/**

depends_on:
- test

---
kind: pipeline
name: build-container-amd64

platform:
  os: linux
  arch: amd64

steps:
- name: build
  image: golang:1.15
  commands:
  - "[ -z \"${DRONE_TAG}\" ] && BUILD_VERSION=${DRONE_COMMIT_SHA:0:8} || BUILD_VERSION=${DRONE_TAG##v}"
  - go build -v -ldflags "-X main.version=$BUILD_VERSION" -a -tags netgo -o release/amd64/drone-docker-buildx ./cmd/drone-docker-buildx

- name: dryrun
  image: plugins/docker:19
  settings:
    config:
      from_secret: docker_config
    dockerfile: docker/Dockerfile.amd64
    dry_run: true
    password:
      from_secret: docker_password
    repo: thegeeklab/${DRONE_REPO_NAME}
    username:
      from_secret: docker_username
  when:
    ref:
    - refs/pull/**
  depends_on:
  - build

- name: publish-dockerhub
  image: plugins/docker:19
  settings:
    auto_tag: true
    auto_tag_suffix: amd64
    config:
      from_secret: docker_config
    dockerfile: docker/Dockerfile.amd64
    password:
      from_secret: docker_password
    repo: thegeeklab/${DRONE_REPO_NAME}
    username:
      from_secret: docker_username
  when:
    ref:
    - refs/heads/main
    - refs/tags/**
  depends_on:
  - dryrun

- name: publish-quay
  image: plugins/docker:19
  settings:
    auto_tag: true
    auto_tag_suffix: amd64
    config:
      from_secret: docker_config
    dockerfile: docker/Dockerfile.amd64
    password:
      from_secret: quay_password
    registry: quay.io
    repo: quay.io/thegeeklab/${DRONE_REPO_NAME}
    username:
      from_secret: quay_username
  when:
    ref:
    - refs/heads/main
    - refs/tags/**
  depends_on:
  - dryrun

image_pull_secrets:
- docker_config

trigger:
  ref:
  - refs/heads/main
  - refs/tags/**
  - refs/pull/**

depends_on:
- test

---
kind: pipeline
name: build-container-arm64

platform:
  os: linux
  arch: arm64

steps:
- name: build
  image: golang:1.15
  commands:
  - "[ -z \"${DRONE_TAG}\" ] && BUILD_VERSION=${DRONE_COMMIT_SHA:0:8} || BUILD_VERSION=${DRONE_TAG##v}"
  - go build -v -ldflags "-X main.version=$BUILD_VERSION" -a -tags netgo -o release/arm64/drone-docker-buildx ./cmd/drone-docker-buildx

- name: dryrun
  image: plugins/docker:19
  settings:
    config:
      from_secret: docker_config
    dockerfile: docker/Dockerfile.arm64
    dry_run: true
    password:
      from_secret: docker_password
    repo: thegeeklab/${DRONE_REPO_NAME}
    username:
      from_secret: docker_username
  when:
    ref:
    - refs/pull/**
  depends_on:
  - build

- name: publish-dockerhub
  image: plugins/docker:19
  settings:
    auto_tag: true
    auto_tag_suffix: arm64
    config:
      from_secret: docker_config
    dockerfile: docker/Dockerfile.arm64
    password:
      from_secret: docker_password
    repo: thegeeklab/${DRONE_REPO_NAME}
    username:
      from_secret: docker_username
  when:
    ref:
    - refs/heads/main
    - refs/tags/**
  depends_on:
  - dryrun

- name: publish-quay
  image: plugins/docker:19
  settings:
    auto_tag: true
    auto_tag_suffix: arm64
    config:
      from_secret: docker_config
    dockerfile: docker/Dockerfile.arm64
    password:
      from_secret: quay_password
    registry: quay.io
    repo: quay.io/thegeeklab/${DRONE_REPO_NAME}
    username:
      from_secret: quay_username
  when:
    ref:
    - refs/heads/main
    - refs/tags/**
  depends_on:
  - dryrun

image_pull_secrets:
- docker_config

trigger:
  ref:
  - refs/heads/main
  - refs/tags/**
  - refs/pull/**

depends_on:
- test

---
kind: pipeline
name: notifications

platform:
  os: linux
  arch: amd64

steps:
- name: manifest-dockerhub
  image: plugins/manifest
  settings:
    auto_tag: true
    ignore_missing: true
    password:
      from_secret: docker_password
    spec: docker/manifest.tmpl
    username:
      from_secret: docker_username
  when:
    status:
    - success

- name: manifest-quay
  image: plugins/manifest
  settings:
    auto_tag: true
    ignore_missing: true
    password:
      from_secret: quay_password
    spec: docker/manifest-quay.tmpl
    username:
      from_secret: quay_username
  when:
    status:
    - success

- name: pushrm-dockerhub
  image: chko/docker-pushrm:1
  environment:
    DOCKER_PASS:
      from_secret: docker_password
    DOCKER_USER:
      from_secret: docker_username
    PUSHRM_FILE: README.md
    PUSHRM_SHORT: Drone plugin to build multiarch Docker images with buildx
    PUSHRM_TARGET: thegeeklab/${DRONE_REPO_NAME}
  when:
    status:
    - success

- name: pushrm-quay
  image: chko/docker-pushrm:1
  environment:
    APIKEY__QUAY_IO:
      from_secret: quay_token
    PUSHRM_FILE: README.md
    PUSHRM_TARGET: quay.io/thegeeklab/${DRONE_REPO_NAME}
  when:
    status:
    - success

- name: matrix
  image: plugins/matrix
  settings:
    homeserver:
      from_secret: matrix_homeserver
    password:
      from_secret: matrix_password
    roomid:
      from_secret: matrix_roomid
    template: "Status: **{{ build.status }}**<br/> Build: [{{ repo.Owner }}/{{ repo.Name }}]({{ build.link }}) ({{ build.branch }}) by {{ build.author }}<br/> Message: {{ build.message }}"
    username:
      from_secret: matrix_username
  when:
    status:
    - success
    - failure

image_pull_secrets:
- docker_config

trigger:
  ref:
  - refs/heads/main
  - refs/tags/**
  status:
  - success
  - failure

depends_on:
- build-binaries
- build-container-amd64
- build-container-arm64

---
kind: signature
hmac: 450e524b8b60cf174405bbe7c26be014671ae1a928157be53706232ace778e14

...
