---
image_pull_secrets:
- docker_config
kind: pipeline
name: test
platform:
  arch: amd64
  os: linux
steps:
- commands:
  - go run honnef.co/go/tools/cmd/staticcheck ./...
  image: golang:1.16
  name: staticcheck
  volumes:
  - name: gopath
    path: /go
- commands:
  - go run golang.org/x/lint/golint -set_exit_status ./...
  image: golang:1.16
  name: lint
  volumes:
  - name: gopath
    path: /go
- commands:
  - go vet ./...
  image: golang:1.16
  name: vet
  volumes:
  - name: gopath
    path: /go
- commands:
  - go test -cover ./...
  image: golang:1.16
  name: test
  volumes:
  - name: gopath
    path: /go
trigger:
  ref:
  - refs/heads/main
  - refs/tags/**
  - refs/pull/**
volumes:
- name: gopath
  temp: {}
---
depends_on:
- test
image_pull_secrets:
- docker_config
kind: pipeline
name: build-binaries
platform:
  arch: amd64
  os: linux
steps:
- commands:
  - '[ -z "${DRONE_TAG}" ] && BUILD_VERSION=${DRONE_COMMIT_SHA:0:8} || BUILD_VERSION=${DRONE_TAG##v}'
  - mkdir -p release/
  - cd cmd/drone-docker-buildx && xgo -ldflags "-s -w -X main.version=$BUILD_VERSION"
    -tags netgo -targets 'linux/amd64,linux/arm-6,linux/arm-7,linux/arm64' -out drone-docker-buildx
    .
  - mv /build/* /drone/src/release/
  - ls -l /drone/src/release/
  image: techknowlogick/xgo:go-1.16.x
  name: build
- commands:
  - $(find release/ -executable -type f | grep drone-docker-buildx-linux-amd64) --help
  image: alpine
  name: executable
- commands:
  - apk add upx
  - find release/ -maxdepth 1 -executable -type f -exec upx {} \;
  - ls -lh release/
  image: alpine
  name: compress
- commands:
  - cd release/ && sha256sum * > sha256sum.txt
  image: alpine
  name: checksum
- commands:
  - git fetch -tq
  - git-chglog --no-color --no-emoji -o CHANGELOG.md ${DRONE_TAG:---next-tag unreleased
    unreleased}
  image: thegeeklab/git-chglog
  name: changelog-generate
- commands:
  - prettier CHANGELOG.md
  - prettier -w CHANGELOG.md
  image: thegeeklab/alpine-tools
  name: changelog-format
- image: plugins/github-release
  name: publish
  settings:
    api_key:
      from_secret: github_token
    files:
    - release/*
    note: CHANGELOG.md
    overwrite: true
    title: ${DRONE_TAG}
  when:
    ref:
    - refs/tags/**
trigger:
  ref:
  - refs/heads/main
  - refs/tags/**
  - refs/pull/**
---
depends_on:
- test
image_pull_secrets:
- docker_config
kind: pipeline
name: build-container-amd64
platform:
  arch: amd64
  os: linux
steps:
- commands:
  - '[ -z "${DRONE_TAG}" ] && BUILD_VERSION=${DRONE_COMMIT_SHA:0:8} || BUILD_VERSION=${DRONE_TAG##v}'
  - go build -v -ldflags "-X main.version=$BUILD_VERSION" -a -tags netgo -o release/amd64/drone-docker-buildx
    ./cmd/drone-docker-buildx
  image: golang:1.16
  name: build
- depends_on:
  - build
  image: plugins/docker:19
  name: dryrun
  settings:
    config:
      from_secret: docker_config
    dockerfile: docker/Dockerfile.amd64
    dry_run: true
    password:
      from_secret: docker_password
    repo: thegeeklab/${DRONE_REPO_NAME}
    username:
      from_secret: docker_username
  when:
    ref:
    - refs/pull/**
- depends_on:
  - dryrun
  image: plugins/docker:19
  name: publish-dockerhub
  settings:
    auto_tag: true
    auto_tag_suffix: amd64
    config:
      from_secret: docker_config
    dockerfile: docker/Dockerfile.amd64
    password:
      from_secret: docker_password
    repo: thegeeklab/${DRONE_REPO_NAME}
    username:
      from_secret: docker_username
  when:
    ref:
    - refs/heads/main
    - refs/tags/**
- depends_on:
  - dryrun
  image: plugins/docker:19
  name: publish-quay
  settings:
    auto_tag: true
    auto_tag_suffix: amd64
    config:
      from_secret: docker_config
    dockerfile: docker/Dockerfile.amd64
    password:
      from_secret: quay_password
    registry: quay.io
    repo: quay.io/thegeeklab/${DRONE_REPO_NAME}
    username:
      from_secret: quay_username
  when:
    ref:
    - refs/heads/main
    - refs/tags/**
trigger:
  ref:
  - refs/heads/main
  - refs/tags/**
  - refs/pull/**
---
depends_on:
- test
image_pull_secrets:
- docker_config
kind: pipeline
name: build-container-arm64
platform:
  arch: arm64
  os: linux
steps:
- commands:
  - '[ -z "${DRONE_TAG}" ] && BUILD_VERSION=${DRONE_COMMIT_SHA:0:8} || BUILD_VERSION=${DRONE_TAG##v}'
  - go build -v -ldflags "-X main.version=$BUILD_VERSION" -a -tags netgo -o release/arm64/drone-docker-buildx
    ./cmd/drone-docker-buildx
  image: golang:1.16
  name: build
- depends_on:
  - build
  image: plugins/docker:19
  name: dryrun
  settings:
    config:
      from_secret: docker_config
    dockerfile: docker/Dockerfile.arm64
    dry_run: true
    password:
      from_secret: docker_password
    repo: thegeeklab/${DRONE_REPO_NAME}
    username:
      from_secret: docker_username
  when:
    ref:
    - refs/pull/**
- depends_on:
  - dryrun
  image: plugins/docker:19
  name: publish-dockerhub
  settings:
    auto_tag: true
    auto_tag_suffix: arm64
    config:
      from_secret: docker_config
    dockerfile: docker/Dockerfile.arm64
    password:
      from_secret: docker_password
    repo: thegeeklab/${DRONE_REPO_NAME}
    username:
      from_secret: docker_username
  when:
    ref:
    - refs/heads/main
    - refs/tags/**
- depends_on:
  - dryrun
  image: plugins/docker:19
  name: publish-quay
  settings:
    auto_tag: true
    auto_tag_suffix: arm64
    config:
      from_secret: docker_config
    dockerfile: docker/Dockerfile.arm64
    password:
      from_secret: quay_password
    registry: quay.io
    repo: quay.io/thegeeklab/${DRONE_REPO_NAME}
    username:
      from_secret: quay_username
  when:
    ref:
    - refs/heads/main
    - refs/tags/**
trigger:
  ref:
  - refs/heads/main
  - refs/tags/**
  - refs/pull/**
---
concurrency:
  limit: 1
depends_on:
- build-binaries
- build-container-amd64
- build-container-arm64
kind: pipeline
name: docs
platform:
  arch: amd64
  os: linux
steps:
- commands:
  - markdownlint 'docs/content/**/*.md' 'README.md' 'CONTRIBUTING.md'
  image: thegeeklab/markdownlint-cli
  name: markdownlint
- commands:
  - npm install -g spellchecker-cli
  - spellchecker --files '_docs/**/*.md' 'README.md' 'CONTRIBUTING.md' -d .dictionary
    -p spell indefinite-article syntax-urls --no-suggestions
  environment:
    FORCE_COLOR: true
    NPM_CONFIG_LOGLEVEL: error
  image: node:lts-alpine
  name: spellcheck
- image: plugins/gh-pages
  name: publish
  settings:
    pages_directory: _docs/
    password:
      from_secret: github_token
    target_branch: docs
    username:
      from_secret: github_username
  when:
    ref:
    - refs/heads/main
trigger:
  ref:
  - refs/heads/main
  - refs/tags/**
  - refs/pull/**
---
depends_on:
- docs
image_pull_secrets:
- docker_config
kind: pipeline
name: notifications
platform:
  arch: amd64
  os: linux
steps:
- image: plugins/manifest
  name: manifest-dockerhub
  settings:
    auto_tag: true
    ignore_missing: true
    password:
      from_secret: docker_password
    spec: docker/manifest.tmpl
    username:
      from_secret: docker_username
  when:
    status:
    - success
- image: plugins/manifest
  name: manifest-quay
  settings:
    auto_tag: true
    ignore_missing: true
    password:
      from_secret: quay_password
    spec: docker/manifest-quay.tmpl
    username:
      from_secret: quay_username
  when:
    status:
    - success
- environment:
    DOCKER_PASS:
      from_secret: docker_password
    DOCKER_USER:
      from_secret: docker_username
    PUSHRM_FILE: README.md
    PUSHRM_SHORT: Drone plugin to build multiarch Docker images with buildx
    PUSHRM_TARGET: thegeeklab/${DRONE_REPO_NAME}
  image: chko/docker-pushrm:1
  name: pushrm-dockerhub
  when:
    status:
    - success
- environment:
    APIKEY__QUAY_IO:
      from_secret: quay_token
    PUSHRM_FILE: README.md
    PUSHRM_TARGET: quay.io/thegeeklab/${DRONE_REPO_NAME}
  image: chko/docker-pushrm:1
  name: pushrm-quay
  when:
    status:
    - success
- image: plugins/matrix
  name: matrix
  settings:
    homeserver:
      from_secret: matrix_homeserver
    password:
      from_secret: matrix_password
    roomid:
      from_secret: matrix_roomid
    template: 'Status: **{{ build.status }}**<br/> Build: [{{ repo.Owner }}/{{ repo.Name
      }}]({{ build.link }}) ({{ build.branch }}) by {{ build.author }}<br/> Message:
      {{ build.message }}'
    username:
      from_secret: matrix_username
  when:
    status:
    - success
    - failure
trigger:
  ref:
  - refs/heads/main
  - refs/tags/**
  status:
  - success
  - failure
---
kind: signature
hmac: 8dfd1d8d060f0e05affcae91a05e8d6184219c6d5f99747bcd73da0739e82c81

...
